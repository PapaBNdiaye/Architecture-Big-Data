[agent]
  interval = "5s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "5s"
  flush_jitter = "0s"
  logfile = ""
  hostname = ""
  omit_hostname = true

[[inputs.kafka_consumer]]
  brokers = ["broker:29092"]
  topics = ["weather_data_v2"]
  consumer_group = "telegraf_weather"
  offset = "newest"
  max_message_len = 1000000
  data_format = "json_v2"

  [[inputs.kafka_consumer.json_v2]]
    measurement_name = "weather"
    # Activation parsing timestamp: les messages contiennent RFC3339 UTC (ex: 2025-09-26T08:44:29Z)
    timestamp_path = "timestamp"
    timestamp_format = "2006-01-02T15:04:05Z07:00"

    # Tags
    [[inputs.kafka_consumer.json_v2.tag]]
      path = "station_id"
    [[inputs.kafka_consumer.json_v2.tag]]
      path = "location.city"
      rename = "city"
    [[inputs.kafka_consumer.json_v2.tag]]
      path = "location.country"
      rename = "country"
    [[inputs.kafka_consumer.json_v2.tag]]
      path = "data_origin"

    # Fields
    [[inputs.kafka_consumer.json_v2.field]]
      path = "location.latitude"
      rename = "latitude"
      type = "float"
    [[inputs.kafka_consumer.json_v2.field]]
      path = "location.longitude"
      rename = "longitude"
      type = "float"
    [[inputs.kafka_consumer.json_v2.field]]
      path = "temperature"
      type = "float"
    [[inputs.kafka_consumer.json_v2.field]]
      path = "humidity"
      type = "int"
    [[inputs.kafka_consumer.json_v2.field]]
      path = "pressure"
      type = "float"
    [[inputs.kafka_consumer.json_v2.field]]
      path = "wind_speed"
      type = "float"
    [[inputs.kafka_consumer.json_v2.field]]
      path = "wind_direction"
      type = "string"
    [[inputs.kafka_consumer.json_v2.field]]
      path = "precipitation"
      type = "float"
    [[inputs.kafka_consumer.json_v2.field]]
      path = "weather_condition"
      type = "string"
    [[inputs.kafka_consumer.json_v2.field]]
      path = "is_rain"
      type = "int"
    [[inputs.kafka_consumer.json_v2.field]]
      path = "is_storm"
      type = "int"
    [[inputs.kafka_consumer.json_v2.field]]
      path = "next_hour_temp"
      type = "float"
    [[inputs.kafka_consumer.json_v2.field]]
      path = "next_hour_precip"
      type = "float"
    # Fin mapping

[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "lambda-token"
  organization = "lambda_org"
  bucket = "speed_bucket"
  timeout = "5s"
  # measurement name; Telegraf will default to 'kafka_consumer' unless json_name_key overrides
  name_override = "weather"

[[outputs.file]]
  files = ["stdout"]
  influx_sort_fields = true
  # Debug output pour confirmer arrivée des messages (désactiver après validation)
